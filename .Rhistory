arrange(desc(ghg_quantity))
#to compare Md and the rest of the nation
#read in summary file from EPA
national_emissions2022 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_by_year_2022.xlsx", sheet = "Direct Emitters", skip = 3)
glimpse(national_emissions2022)
national_filtered <- national_emissions2022 |>
group_by(State) |>
summarise(count=n()) |>
arrange(desc(count))
#chat gpt helped troubleshoot error
total_emissions_per_state <- national_emissions2022 %>%
group_by(State) %>%
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
glimpse()
counties <- counties()
glimpse(counties)
md_counties <- counties |>
filter(STATEFP == "24")
map_md_emissions <- md_counties |> left_join(locations_md, by=c('NAMELSAD'='county_name'))
ggplot(locations_md, aes(x = longitude, y = latitude)) +
geom_point() +
labs(x = "longitude", y = "latitude") +
ggtitle("Map of Latitude and Longitude")
ggplot(locations_md, aes(x = ghg_quantity, y = county_name)) +
geom_point(color = "blue", size = 3) +
labs(title = "Number of Calls by Income and Zipcode", x = "ghg_emissons", y = "county_name") +
geom_text(aes(label = zip_code), check_overlap = TRUE)
ggplot() +
geom_sf(data=locations_md, aes(fill=ghg_quantity)) +
scale_colour_viridis_b(option="magma") +
theme_minimal()
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
glimpse()
View(locations_md)
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(ghg_quantity) |>
glimpse()
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity)) |>
glimpse()
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity)) |>
head()
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
library(tigris)
library(tidycensus)
library(dplyr)
library(ggplot2)
library(mapview)
#asked chatgpt for code to load one sheet of a spreadsheet
library(readxl)
#This is the data from FLIGHT to look at emissions from the state of Maryland
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5)
View(md_emissions2022)
#to view largest to smallest quantity
md_emissions2022 <- md_emissions2022 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
arrange(desc(ghg_quantity))
View(md_emissions2022)
#to view largest to smallest quantity
md_emissions2022 <- md_emissions2022 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
arrange(desc(ghg_quantity))
md_emissions2022 |> group_by(county_name) |>
summarise(total_emissions = sum(ghg_quantity)) |>
arrange(desc(total_emissions)) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
#Prince George's County has duplicates and we need to figure out how to combine them. 2 extra PG Counties and 1 extra MoCo and 1 extra Harford.
distinct()
md_county_income |> clean_names() |>
mutate(name = str_to_title(str_remove_all(name,"County, Maryland"))) |>
mutate(name = str_to_title(str_remove_all(name, ", Maryland"))) |>
mutate(name = str_trim(name,side="both")) |>
mutate(name = str_to_upper(name))
md_emissions2022<-
md_emissions2022 |> group_by(county_name) |>
summarise(total_emissions = sum(ghg_quantity)) |>
arrange(desc(total_emissions)) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
#Prince George's County has duplicates and we need to figure out how to combine them. 2 extra PG Counties and 1 extra MoCo and 1 extra Harford.
distinct()
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e)
md_emissions2022 <- read_excel("data/md_emissions_2021.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e)
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e)
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
arrange(desc(total_emissions)) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
#Prince George's County has duplicates and we need to figure out how to combine them. 2 extra PG Counties and 1 extra MoCo and 1 extra Harford.
distinct()
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
#Prince George's County has duplicates and we need to figure out how to combine them. 2 extra PG Counties and 1 extra MoCo and 1 extra Harford.
distinct()
emissions_grouped_by_county <- md_emissions2022 |>
group_by(county_name) |>
summarise(total_emissions = sum(ghg_quantity))
View(emissions_grouped_by_county)
md_county_income |> clean_names() |>
mutate(name = str_to_title(str_remove_all(name,"County, Maryland"))) |>
mutate(name = str_to_title(str_remove_all(name, ", Maryland"))) |>
mutate(name = str_trim(name,side="both")) |>
mutate(name = str_to_upper(name))
md_county_income <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
year = 2021,
state = "MD") |>
mutate(min = estimate - moe, max = estimate + moe) |>
glimpse()
View(md_county_income)
md_county_income <- md_county_income |> clean_names() |>
mutate(name = str_to_title(str_remove_all(name,"County, Maryland"))) |>
mutate(name = str_to_title(str_remove_all(name, ", Maryland"))) |>
mutate(name = str_trim(name,side="both")) |>
mutate(name = str_to_upper(name))
View(md_county_income)
emissions_grouped_by_county |>
left_join(md_county_income)
emissions_grouped_by_county |>
left_join(md_county_income |>
rename(county_name = name))
md_county_income |>
rename(county_name = name) |>
left_join(emissions_grouped_by_county)
temp <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2021.xlsx")
View(temp)
temp <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2021.xlsx") |>
clean_names()
temp <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2021.xlsx", skip=2) |>
clean_names()
temp <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2021.xlsx", skip=3) |>
clean_names()
temp <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2021.xlsx", skip=3) |>
clean_names() |>
filter(state == "MD")
md_20220_emissions_with_income <- md_county_income |>
rename(county_name = name) |>
left_join(emissions_grouped_by_county)
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity)) |>
head()
counties <- counties()
md_20220_emissions_with_income
View(counties)
md_counties <- counties |>
filter(STATEFP == "24")
View(md_counties)
View(md_emissions2022)
View(md_20220_emissions_with_income)
View(md_20220_emissions_with_income)
md_counties <- counties |>
filter(STATEFP == "24") |>
arrange(name)
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(name)
md_20220_emissions_with_income |>
arrange()
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(namelad)
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(nameslad)
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(namelsad)
md_20220_emissions_with_income |>
arrange() |>
bind_cols(md_counties)
temp <- md_20220_emissions_with_income |>
arrange() |>
bind_cols(md_counties)
library(mapview)
mapview(temp)
View(temp)
glimpse(temp)
View(temp[[26]][[1]])
class(md_counties)
mapview(md_counties)
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity)) |>
head()
counties <- counties()
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(namelsad)
temp <- md_20220_emissions_with_income |>
arrange() |>
bind_cols(md_counties)
library(mapview)
class(md_20220_emissions_with_income)
class(temp)
class(md_20220_emissions_with_income)
temp <- md_counties |>
arrange() |>
bind_cols(md_20220_emissions_with_income)
class(temp)
mapview(temp)
mapview(temp, zcol="total_emissions")
View(emissions_grouped_by_county)
read_excel("data/superfund.xls")
read_excel("data/superfund.xls")
read_excel("data/superfund.xls")
read_csv("data/superfund-fixed.csv")
for(number in nrow(counties)){
print(number)
}
for(number in 1:nrow(counties)){
print(number)
}
people <- c("Andrea", "Laura", "Ryan")
for(person in people){
print(person)
}
for(person in people){
print(str_count(person)*5)
}
for(person in people){
print(str_count(person))
}
View(md_emissions2022)
mapview(temp)
View(locations_md)
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity))
mapview(locations_map, zcol=ghg_quantity)
locations_map <- md_counties |>
arrange() |>
bind_cols(md_20220_emissions_with_income)
mapview(locations_map, zcol=ghg_quantity)
mapview(locations_map, zcol=sum(ghg_quantity))
locations_map <- md_counties |>
arrange() |>
bind_cols(md_20220_emissions_with_income)
View(locations_map)
mapview(locations_map, zcol=total_emissions)
mapview(locations_map, zcol=total_emissions)
locations_map <- md_counties |>
arrange() |>
bind_cols(md_20220_emissions_with_income)
mapview(locations_map, zcol=total_emissions)
mapview(locations_map, zcol="total_emissions")
md_2022_emissions_with_income <- md_county_income |>
rename(county_name = name) |>
left_join(emissions_grouped_by_county)
locations_map <- md_counties |>
arrange() |>
bind_cols(md_2022_emissions_with_income)
mapview(locations_map, zcol="total_emissions")
View(md_2022_emissions_with_income)
superfund-fixed <- read_csv("data/superfund-fixed.csv")
superfund-fixed <- read_csv("data/superfund-fixed.csv")
superfund_fixed <- read_csv("data/superfund-fixed.csv")
View(superfund_fixed)
superfund_fixed <- read_csv("data/superfund-fixed.csv", skip = 9)
superfund_fixed <- read_csv("data/superfund-fixed.csv", skip = 10)
superfund_fixed |>
clean_names() |>
filter(str_detect(npl_status, "Final NPL"))
superfund_fixed_filtered <- superfund_fixed |>
clean_names() |>
filter(str_detect(npl_status, "Final NPL"))
View(superfund_fixed_filtered)
superfund_fixed_filtered <- superfund_fixed |>
clean_names() |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n())
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n())
superfund_fixed_filtered <- superfund_fixed |>
clean_names()
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n())
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n()) |>
arrange(desc(count))
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) #|>
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
arrange(desc())#|>
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
arrange(desc())#|>
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
arrange(desc(county))#|>
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n()) |>
arrange(desc(count))
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
arrange(desc(county))
#chat gpt helped troubleshoot error
total_emissions_per_state <- national_emissions2022 %>%
group_by(State) %>%
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
#to compare Md and the rest of the nation
#read in summary file from EPA
national_emissions2022 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_by_year_2022.xlsx", sheet = "Direct Emitters", skip = 3)
national_filtered <- national_emissions2022 |>
group_by(State) |>
summarise(count=n()) |>
arrange(desc(count))
#chat gpt helped troubleshoot error
total_emissions_per_state <- national_emissions2022 %>%
group_by(State) %>%
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
View(total_emissions_per_state)
#chat gpt helped troubleshoot error
total_emissions_per_state <- national_emissions2022 %>%
group_by(State) %>%
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5) |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |> #FINISH CLEANING (EVERYTHING IN CAPS)
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
#Prince George's County has duplicates and we need to figure out how to combine them. 2 extra PG Counties and 1 extra MoCo and 1 extra Harford.
distinct()
emissions_grouped_by_county <- md_emissions2022 |>
group_by(county_name) |>
summarise(total_emissions = sum(ghg_quantity))
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2012 <- read_excel("data/ms_emissions_2012.xls", skip = 5)
md_emissions2012 <- read_excel("data/md_emissions_2012.xls", skip = 5)
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 5)
View(md_emissions2012)
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 2)
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3)
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3) |>
filter(state, "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3) |>
filter(state = "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3) |>
filter(state == "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3) |>
clean_names() |>
filter(state == "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3)
md_emissions2012 <- md_emissions2012 |>
clean_names()
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD")
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
group_by(state == "MD") |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
group_by(state) |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
arrange(desc(total_reported_direct_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
mutate(facility_name= str_to_upper(facility_name)) |>
mutate(address = str_to_upper(address)) |>
mutate(city = str_to_upper(city)) |>
mutate(county = str_to_upper(county)) |>
mutate(industry_type_sectors = str_to_upper(industry_type_sectors)) |>
arrange(desc(total_reported_direct_emissions))
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
#I only found 67 in this dataset. Check?
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
glimpse()
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions)) |>
glimpse()
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions)) |>
glimpse()
View(md_20220_emissions_with_income)
View(md_2022_emissions_with_income)
rm(md_20220_emissions_with_income)
md_20220_emissions_with_income |>
arrange(total_emissions)
md_2022_emissions_with_income |>
arrange(total_emissions)
md_2022_emissions_with_income |>
arrange(desc(total_emissions))
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
