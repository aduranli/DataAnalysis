filter(state == "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3) |>
clean_names() |>
filter(state == "MD")
md_emissions2012 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_2012.xlsx", skip = 3)
md_emissions2012 <- md_emissions2012 |>
clean_names()
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD")
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
group_by(state == "MD") |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
group_by(state) |>
summarise(total_emissions = sum(`total_reported_dorect_emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
arrange(desc(total_reported_direct_emissions))
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
filter(state == "MD") |>
mutate(facility_name= str_to_upper(facility_name)) |>
mutate(address = str_to_upper(address)) |>
mutate(city = str_to_upper(city)) |>
mutate(county = str_to_upper(county)) |>
mutate(industry_type_sectors = str_to_upper(industry_type_sectors)) |>
arrange(desc(total_reported_direct_emissions))
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
#I only found 67 in this dataset. Check?
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
glimpse()
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions)) |>
glimpse()
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions)) |>
glimpse()
View(md_20220_emissions_with_income)
View(md_2022_emissions_with_income)
rm(md_20220_emissions_with_income)
md_20220_emissions_with_income |>
arrange(total_emissions)
md_2022_emissions_with_income |>
arrange(total_emissions)
md_2022_emissions_with_income |>
arrange(desc(total_emissions))
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
md_emissions2022 |>
arrange(desc(ghg_quantity))
#I only found 67 in this dataset. Check? And UMD was 19th out of 67 so still not great
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(janitor)
library(tigris)
library(tidycensus)
library(dplyr)
library(ggplot2)
library(mapview)
library(ggthemes)
#asked chatgpt for code to load one sheet of a spreadsheet
library(readxl)
#This is the data from FLIGHT to look at emissions from the state of Maryland
md_emissions2022 <- read_excel("data/md_emissions_2022.xls", skip = 5)
glimpse(md_emissions2022)
md_emissions2021 <- read_excel("data/flight.xls", sheet = "2021", skip = 6)
md_emissions2020 <- read_excel("data/flight.xls", sheet = "2020", skip = 6)
md_emissions2019 <- read_excel("data/flight.xls", sheet = "2019", skip = 6)
md_emissions2018 <- read_excel("data/flight.xls", sheet = "2018", skip = 6)
md_emissions2017 <- read_excel("data/flight.xls", sheet = "2017", skip = 6)
md_emissions2016 <- read_excel("data/flight.xls", sheet = "2016", skip = 6)
md_emissions2015 <- read_excel("data/flight.xls", sheet = "2015", skip = 6)
md_emissions2014 <- read_excel("data/flight.xls", sheet = "2014", skip = 6)
md_emissions2013 <- read_excel("data/flight.xls", sheet = "2013", skip = 6)
md_emissions2012 <- read_excel("data/flight.xls", sheet = "2012", skip = 6)
md_emissions2011 <- read_excel("data/flight.xls", sheet = "2011", skip = 6)
md_emissions2010 <- read_excel("data/flight.xls", sheet = "2010", skip = 6)
#this is getting the data from the Census API file for median income from 2021 by County in the state of Maryland.
census_api_key("77872777955b38b9334cbbae8eea25f316159387")
md_county_income <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
year = 2021,
state = "MD") |>
mutate(min = estimate - moe, max = estimate + moe) |>
glimpse()
#loading in superfund data
superfund_fixed <- read_csv("data/superfund-fixed.csv", skip = 10)
md_emissions2022 <- md_emissions2022 |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
View(md_emissions2022)
md_emissions2022 <- md_emissions2022 |>
#to view largest to smallest quantity
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2010 <- md_emissions2010 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2011 <- md_emissions2011 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2012 <- md_emissions2012 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2013 <- md_emissions2013 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2014 <- md_emissions2014 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2015 <- md_emissions2015 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2016 <- md_emissions2016 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2017 <- md_emissions2017 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2018 <- md_emissions2018 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2019 <- md_emissions2019 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2020 <- md_emissions2020 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
md_emissions2021 <- md_emissions2021 |>
clean_names() |>
rename(ghg_quantity = ghg_quantity_metric_tons_co2e) |>
mutate(county_name = str_to_title(str_remove_all(county_name,"COUNTY"))) |>
mutate(county_name = str_trim(county_name,side="both")) |>
#mutate(county_name = str_to_title(str_remove_all(county_name," CITY"))) |>
mutate(county_name = str_to_upper(county_name)) |>
mutate(facility_name = str_to_upper(facility_name)) |>
mutate(reported_address = str_to_upper(reported_address)) |>
mutate(city_name = str_to_upper(city_name)) |>
mutate(parent_companies = str_to_upper(parent_companies)) |>
distinct()
emissions_grouped_by_county <- md_emissions2022 |>
group_by(county_name) |>
summarise(total_emissions = sum(ghg_quantity))
md_county_income <- md_county_income |> clean_names() |>
mutate(name = str_to_title(str_remove_all(name,"County, Maryland"))) |>
mutate(name = str_to_title(str_remove_all(name, ", Maryland"))) |>
mutate(name = str_trim(name,side="both")) |>
mutate(name = str_to_upper(name))
md_2022_emissions_with_income <- md_county_income |>
rename(county_name = name) |>
left_join(emissions_grouped_by_county)
superfund_fixed_filtered <- superfund_fixed |>
clean_names()
#to compare Md and the rest of the nation
#read in summary file from EPA
national_emissions2022 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_by_year_2022.xlsx", sheet = "Direct Emitters", skip = 3)
#to compare Md and the rest of the nation
#read in summary file from EPA
national_emissions2022 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_by_year_2022.xlsx", sheet = "Direct Emitters", skip = 3)
#to compare Md and the rest of the nation
#read in summary file from EPA
national_emissions2022 <- read_excel("2022_data_summary_spreadsheets/ghgp_data_by_year_2022.xlsx", sheet = "Direct Emitters", skip = 3)
#group by state and count
national_filtered <- national_emissions2022 |>
group_by(State) |>
summarise(count=n()) |>
arrange(desc(count))
#chat gpt helped troubleshoot error
#we chose direct emissions because it provided the most accurate and full picture
total_emissions_per_state <- national_emissions2022 %>%
group_by(State) %>%
summarise(total_emissions = sum(`2022 Total reported direct emissions`, na.rm = TRUE)) |>
arrange(desc(total_emissions))
View(national_filtered)
locations_md <- md_emissions2022 |>
arrange(desc(ghg_quantity)) |>
mutate(zip_code = as.character(zip_code)) |>
group_by(county_name) |>
summarise(sum(ghg_quantity))
counties <- counties()
#calculating most emisions and arranging to compare 2022 and a decade before 2012
md_emissions2022 |>
arrange(desc(ghg_quantity))
md_emissions2012 |>
arrange(desc(total_reported_direct_emissions))
View(md_emissions2012)
md_emissions2012 |>
arrange(desc(ghg_quantity))
#analyzing all years
#total number of emissions to join by row
totals_2022 <- md_emissions2022 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2022")
totals_2021 <- md_emissions2021 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE)) |>
mutate(year = "2021")
totals_2020 <- md_emissions2020 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2020")
totals_2019 <- md_emissions2019 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2019")
totals_2018 <- md_emissions2018 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2018")
totals_2017 <- md_emissions2017 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2017")
totals_2016 <- md_emissions2016 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2016")
totals_2015 <- md_emissions2015 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2015")
totals_2014 <- md_emissions2014 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2014")
totals_2013 <- md_emissions2013 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2013")
totals_2012 <- md_emissions2012 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2012")
totals_2011 <- md_emissions2011 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2011")
totals_2010 <- md_emissions2010 |>
summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(year = "2010")
combined_years <- bind_rows(totals_2022, totals_2021, totals_2020, totals_2019, totals_2018, totals_2017, totals_2016, totals_2015, totals_2014, totals_2013, totals_2012, totals_2011, totals_2010)
write_csv(combined_years,"data/combined_years.csv")
#writing a file to use for datawrapper
combined_emissions <- bind_rows(md_emissions2022, md_emissions2021)
write_csv(combined_emissions,"data/combined_emissions1.csv")
#analyzing superfund to show those in the final list of sites being supervised by environmental officials.
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
arrange(desc(county))
superfund_fixed_filtered |>
filter(str_detect(npl_status, "Final NPL")) |>
group_by(county) |>
summarise(count = n()) |>
arrange(desc(count))
#we arranged from most to least to see how the variable median income would affect the data
md_2022_emissions_with_income |>
arrange(desc(total_emissions))
write_csv(md_2022_emissions_with_income, "data/md_2022_emissions_with_income.csv")
#this wasn't the best visualization but we made others
ggplot(md_2022_emissions_with_income, aes(x = max, y = total_emissions)) +
geom_point(color = "blue", size = 3) +
labs(title = "Total emissions and median income", x = "Income", y = "GHG") +
geom_text(aes(label = county_name), check_overlap = TRUE)
#we made a map visualization of median income and total emissions per county using mapview
md_counties <- counties |>
filter(STATEFP == "24") |>
clean_names() |>
arrange(namelsad)
locations_map <- md_counties |>
arrange() |>
bind_cols(md_2022_emissions_with_income)
mapview(locations_map, zcol="total_emissions")
#we filtered all data for each industry, joined all results by totals and wrote a csv file to use datawrapper
# https://www.epa.gov/ghgreporting/resources-subpart-ghg-reporting shows the codes of the subparts
Fuel<- md_emissions2022 |>
filter(str_detect(subparts, "C"))
Landfills<- md_emissions2022 |>
filter(str_detect(subparts, "HH"))
Petsystems<- md_emissions2022 |>
filter(str_detect(subparts, "W"))
carbon<- md_emissions2022 |>
filter(str_detect(subparts, "PP"))
cement<- md_emissions2022 |>
filter(str_detect(subparts, "H"))
#join all results by totals
total_fuel <- Fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
total_landfills <- Landfills  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "landfill")
total_petsystems <- Petsystems  |> summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "pet systems")
total_electricity <- Electricity  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "electricity")
Electricity<- md_emissions2022 |>
filter(str_detect(subparts, "D"))
View(Electricity)
electricity<- md_emissions2022 |>
filter(str_detect(subparts, "D"))
#join all results by totals
total_fuel <- Fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
total_landfills <- Landfills  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "landfill")
total_petsystems <- Petsystems  |> summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "pet systems")
total_electricity <- Electricity  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "electricity")
total_carbon <- carbon |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "carbon")
total_cement <- cement  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "cement")
total_natgas <-Natgas  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "natural gas")
#join all results by totals
total_fuel <- Fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
total_landfills <- Landfills  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "landfill")
total_petsystems <- Petsystems  |> summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "pet systems")
total_electricity <- electricity  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "electricity")
total_carbon <- carbon |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "carbon")
total_cement <- cement  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "cement")
total_natgas <-Natgas  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "natural gas")
natgas <- md_emissions2022 |>
filter(str_detect(subparts, "NN"))
View(natgas)
#join all results by totals
total_fuel <- fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
#we filtered all data for each industry, joined all results by totals and wrote a csv file to use datawrapper
# https://www.epa.gov/ghgreporting/resources-subpart-ghg-reporting shows the codes of the subparts
fuel<- md_emissions2022 |>
filter(str_detect(subparts, "C"))
#join all results by totals
total_fuel <- fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
total_landfills <- landfills  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "landfill")
landfills<- md_emissions2022 |>
filter(str_detect(subparts, "HH"))
petsystems<- md_emissions2022 |>
filter(str_detect(subparts, "W"))
electricity<- md_emissions2022 |>
filter(str_detect(subparts, "D"))
carbon<- md_emissions2022 |>
filter(str_detect(subparts, "PP"))
cement<- md_emissions2022 |>
filter(str_detect(subparts, "H"))
#join all results by totals
total_fuel <- fuel  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "fuel")
total_landfills <- landfills  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "landfill")
total_petsystems <- petsystems  |> summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "pet systems")
total_electricity <- electricity  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "electricity")
total_carbon <- carbon |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "carbon")
total_cement <- cement  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "cement")
total_natgas <- natgas  |>  summarise(total_ghg = sum(ghg_quantity, na.rm = TRUE))  |>
mutate(source = "natural gas")
combined_totals <- bind_rows(total_fuel, total_landfills, total_petsystems, total_electricity, total_carbon, total_cement, total_natgas)
write_csv(combined_totals, "data/combined_totals.csv")
View(combined_totals)
